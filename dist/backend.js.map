{"version":3,"sources":["webpack://backend/webpack/bootstrap","webpack://backend/./backend/src/main.js","webpack://backend/./backend/src/services.js","webpack://backend/./backend/src/service/version.js","webpack://backend/./backend/src/service/sequence.js","webpack://backend/./backend/src/config/config.js","webpack://backend/./backend/src/config/locales.js","webpack://backend/./backend/src/config/locale/zh-cn.js","webpack://backend/./backend/src/config/errors.js","webpack://backend/./backend/src/config/middlewares.js","webpack://backend/./backend/src/config/middleware/sequence.js","webpack://backend/./backend/src/config/middleware/adapter/sequence.js","webpack://backend/./backend/src/meta.js","webpack://backend/./backend/src/routes.js","webpack://backend/./backend/src/controller/version.js","webpack://backend/./backend/src/controller/sequence.js","webpack://backend/./backend/src/controller/test.js","webpack://backend/external \"require3\"","webpack://backend//Users/wind/Documents/data/cabloy/egg-born-demo/node_modules/p-map/index.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA,iBAAiB,mBAAO,CAAC,CAAe;AACxC,eAAe,mBAAO,CAAC,CAAoB;AAC3C,gBAAgB,mBAAO,CAAC,CAAqB;AAC7C,eAAe,mBAAO,CAAC,CAAoB;AAC3C,oBAAoB,mBAAO,CAAC,CAAyB;;AAErD;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,EAAW;AAClC,iBAAiB,mBAAO,CAAC,EAAa;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvBA,gBAAgB,mBAAO,CAAC,CAAsB;AAC9C,iBAAiB,mBAAO,CAAC,CAAuB;AAChD;AACA;AACA;AACA;;;;;;;ACLA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC3BA;;AAEA;;AAEA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACbA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;;;;;ACpBA;AACA,WAAW,mBAAO,CAAC,CAAmB;AACtC;;;;;;;ACFA;AACA;;;;;;;ACDA;AACA;AACA;;;;;;;ACFA,iBAAiB,mBAAO,CAAC,CAA0B;;AAEnD;AACA;AACA;;;;;;;ACJA,mBAAmB,mBAAO,CAAC,EAAuB;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,+CAA+C,sBAAsB;;AAErE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;AClBA,gBAAgB,mBAAO,CAAC,EAAyB;AACjD,iBAAiB,mBAAO,CAAC,EAA0B;AACnD,aAAa,mBAAO,CAAC,EAAsB;;AAE3C;AACA;AACA,KAAK,oFAAoF;AACzF,KAAK,2FAA2F,QAAQ,gBAAgB,EAAE,EAAE;AAC5H;AACA;AACA;AACA,OAAO,8EAA8E;AACrF;AACA;AACA;AACA;;;;;;;ACfA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACVA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACZA,iBAAiB,mBAAO,CAAC,EAAU;AACnC;;AAEA;AACA,eAAe,mBAAO,CAAC,EAAO;AAC9B;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;ACpDA,qC;;;;;;;ACAa;AACb;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;;AAEA;AACA,sFAAsF,YAAY,MAAM,mBAAmB;AAC3H;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;;AAEA;AACA;AACA;AACA;AACA,CAAC","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const services = require('./services.js');\nconst config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst middlewares = require('./config/middlewares.js');\n\n// eslint-disable-next-line\nmodule.exports = app => {\n\n  // meta\n  const meta = require('./meta.js')(app);\n  const routes = require('./routes.js')(app);\n\n  return {\n    routes,\n    services,\n    config,\n    locales,\n    errors,\n    middlewares,\n    meta,\n  };\n\n};\n","const version = require('./service/version.js');\nconst sequence = require('./service/sequence.js');\nmodule.exports = {\n  version,\n  sequence,\n};\n","module.exports = app => {\n\n  class Version extends app.Service {\n\n    async update(options) {\n      if (options.version === 1) {\n        // create table: aSequence\n        const sql = `\n          CREATE TABLE aSequence (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            module varchar(255) DEFAULT NULL,\n            name varchar(255) DEFAULT NULL,\n            value json DEFAULT NULL,\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n      }\n    }\n\n  }\n\n  return Version;\n};\n","module.exports = app => {\n\n  class Sequence extends app.Service {\n\n    // next\n    async next({ module, name }) {\n      const res = await this.ctx.meta.sequence.module(module)._next(name);\n      return res;\n    }\n\n  }\n\n  return Sequence;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // middlewares\n  config.middlewares = {\n    sequence: {\n      global: true,\n      dependencies: 'instance',\n    },\n  };\n\n  // queues\n  config.queues = {\n    sequence: {\n      path: 'sequence/next',\n    },\n  };\n\n  return config;\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = {\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","const sequence = require('./middleware/sequence.js');\n\nmodule.exports = {\n  sequence,\n};\n","const SequenceFn = require('./adapter/sequence.js');\nconst SEQUENCE = Symbol('CTX#__SEQUENCE');\n\nmodule.exports = () => {\n  return async function sequence(ctx, next) {\n    ctx.meta = ctx.meta || {};\n    Object.defineProperty(ctx.meta, 'sequence', {\n      get() {\n        if (ctx.meta[SEQUENCE] === undefined) {\n          ctx.meta[SEQUENCE] = new (SequenceFn(ctx))();\n        }\n        return ctx.meta[SEQUENCE];\n      },\n    });\n\n    // next\n    await next();\n  };\n};\n","const Fn = module.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class Sequence {\n\n    constructor(moduleName) {\n      this.moduleName = moduleName || ctx.module.info.relativeName;\n    }\n\n    // other module's sequence\n    module(moduleName) {\n      return new (Fn(ctx))(moduleName);\n    }\n\n    async reset(name) {\n      const provider = this._findSequenceProvider(name);\n      const sequence = await this._get(name);\n      await ctx.db.update('aSequence', {\n        id: sequence.id,\n        value: JSON.stringify(provider.start),\n      });\n    }\n\n    async current(name) {\n      const sequence = await this._get(name);\n      if (sequence) return JSON.parse(sequence.value);\n      const provider = this._findSequenceProvider(name);\n      return provider.start;\n    }\n\n    async next(name) {\n      const res = await ctx.app.meta.queue.pushAsync({\n        subdomain: ctx.subdomain,\n        module: moduleInfo.relativeName,\n        queueName: 'sequence',\n        data: {\n          module: this.moduleName,\n          name,\n        },\n      });\n      return res;\n    }\n\n    async _next(name) {\n      const provider = this._findSequenceProvider(name);\n      const sequence = await this._get(name);\n\n      // current\n      let current;\n      if (sequence) {\n        current = JSON.parse(sequence.value);\n      } else {\n        current = provider.start;\n      }\n\n      // next\n      const value = await provider.expression({ ctx, value: current });\n\n      // save\n      if (sequence) {\n        await ctx.db.update('aSequence', {\n          id: sequence.id,\n          value: JSON.stringify(value),\n        });\n      }\n      // insert\n      else {\n        await ctx.db.insert('aSequence', {\n          iid: ctx.instance.id,\n          module: this.moduleName,\n          name,\n          value: JSON.stringify(value),\n        });\n      }\n\n      return value;\n    }\n\n    async _get(name) {\n      // get\n      const sequence = await ctx.db.get('aSequence', {\n        iid: ctx.instance.id,\n        module: this.moduleName,\n        name,\n      });\n      return sequence;\n    }\n\n    _findSequenceProvider(name) {\n      const meta = ctx.app.meta.modules[this.moduleName].main.meta;\n      return meta.sequence.providers[name];\n    }\n\n  }\n\n  return Sequence;\n};\n","module.exports = app => {\n  const meta = {};\n  if (app.meta.isTest || app.meta.isLocal) {\n    // meta\n    Object.assign(meta, {\n      sequence: {\n        providers: {\n          test: {\n            start: 0,\n            expression({ ctx, value }) {\n              return ++value;\n            },\n          },\n        },\n      },\n    });\n  }\n  return meta;\n};\n","const version = require('./controller/version.js');\nconst sequence = require('./controller/sequence.js');\nconst test = require('./controller/test.js');\n\nmodule.exports = app => {\n  let routes = [\n    { method: 'post', path: 'version/update', controller: version, middlewares: 'inner' },\n    { method: 'post', path: 'sequence/next', controller: sequence, middlewares: 'inner', meta: { auth: { enable: false } } },\n  ];\n  if (app.meta.isTest || app.meta.isLocal) {\n    routes = routes.concat([\n      { method: 'get', path: 'test/sequence', controller: test, middlewares: 'test' },\n    ]);\n  }\n  return routes;\n};\n","module.exports = app => {\n  class VersionController extends app.Controller {\n\n    async update() {\n      await this.service.version.update(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n  }\n  return VersionController;\n};\n","module.exports = app => {\n\n  class SequenceController extends app.Controller {\n\n    async next() {\n      const res = await this.ctx.service.sequence.next(this.ctx.request.body);\n      this.ctx.success(res);\n    }\n\n  }\n\n  return SequenceController;\n};\n","const require3 = require('require3');\nconst assert = require3('assert');\n\nmodule.exports = app => {\n  const pMap = require('p-map');\n  class TestController extends app.Controller {\n\n    async sequence() {\n\n      // current\n      let current = await this.ctx.meta.sequence.current('test');\n      assert(current === 0);\n\n      // next\n      let next = await this.ctx.meta.sequence.next('test');\n      assert(next === 1);\n\n      // current\n      current = await this.ctx.meta.sequence.current('test');\n      assert(current === 1);\n\n      // reset\n      await this.ctx.meta.sequence.reset('test');\n\n      // other module's sequence\n      const moduleSequence = this.ctx.meta.sequence.module(this.ctx.module.info.relativeName);\n\n      // next\n      next = await moduleSequence.next('test');\n      assert(next === 1);\n\n      // current\n      current = await moduleSequence.current('test');\n      assert(current === 1);\n\n      // reset\n      await moduleSequence.reset('test');\n\n      // concurrency\n      const results = await pMap([ 1, 2, 3, 4, 5 ], async () => {\n        return await moduleSequence.next('test');\n      });\n      assert(results.join(',') === '1,2,3,4,5');\n\n      // reset\n      await moduleSequence.reset('test');\n\n      this.ctx.success();\n    }\n\n  }\n  return TestController;\n};\n\n","module.exports = require(\"require3\");","'use strict';\nmodule.exports = (iterable, mapper, opts) => new Promise((resolve, reject) => {\n\topts = Object.assign({\n\t\tconcurrency: Infinity\n\t}, opts);\n\n\tif (typeof mapper !== 'function') {\n\t\tthrow new TypeError('Mapper function is required');\n\t}\n\n\tconst concurrency = opts.concurrency;\n\n\tif (!(typeof concurrency === 'number' && concurrency >= 1)) {\n\t\tthrow new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${concurrency}\\` (${typeof concurrency})`);\n\t}\n\n\tconst ret = [];\n\tconst iterator = iterable[Symbol.iterator]();\n\tlet isRejected = false;\n\tlet iterableDone = false;\n\tlet resolvingCount = 0;\n\tlet currentIdx = 0;\n\n\tconst next = () => {\n\t\tif (isRejected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nextItem = iterator.next();\n\t\tconst i = currentIdx;\n\t\tcurrentIdx++;\n\n\t\tif (nextItem.done) {\n\t\t\titerableDone = true;\n\n\t\t\tif (resolvingCount === 0) {\n\t\t\t\tresolve(ret);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tresolvingCount++;\n\n\t\tPromise.resolve(nextItem.value)\n\t\t\t.then(el => mapper(el, i))\n\t\t\t.then(\n\t\t\t\tval => {\n\t\t\t\t\tret[i] = val;\n\t\t\t\t\tresolvingCount--;\n\t\t\t\t\tnext();\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tisRejected = true;\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t);\n\t};\n\n\tfor (let i = 0; i < concurrency; i++) {\n\t\tnext();\n\n\t\tif (iterableDone) {\n\t\t\tbreak;\n\t\t}\n\t}\n});\n"],"sourceRoot":""}